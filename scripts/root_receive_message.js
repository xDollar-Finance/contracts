const hre = require("hardhat");
const rootTunnelJson = require("../artifacts/contracts/examples/erc20-reverse-transfer/FxReverseERC20RootTunnel.sol/FxReverseERC20RootTunnel.json");

async function main() {
    const [deployer] = await hre.ethers.getSigners();

    const proof = "0xf90aba841cbf5060b901005dc3826089e5b37d88e2db069e00844301d6529aacba26c9295452d330d7e5a9542cc5ca5f2e8bdfb95c3573541c40a00f17135c9b936b65a4e97f6fb6102a2de0db9b8bf6f104781a8aad12afce613e47ff590dfae57068895d4d8aa99fc5c2a70ae12390bb32d302c394bb04aaf3ef977bcbbfe07cafb9a6c017f73061bd52b4b7078b23099d9f0815e07a29c900aa2c79ac257b2b5ec5a1b2759a797615a957b2227fb5ac4b3085c00c82c1cf500e8c799b189377ce8c7893b1757f09fa2a73305b8ffd490dbbcb34dd25f6ac5fa02883ea026f53361d343c7e8694dee628eb58fb20321bc091603215632fe325c9f8aec0cbfe94be29cf7b714bee519382840106199484610972a8a030844f4941cb8069ba53886fbef5dfad9e8779ce6bf510b266adf03abb67bc05a0896695347358cc1c715ac4e803e6118854300e807c6010c653fc62455bd7fcf7b904a8f904a501830110cbbf9039af89b94326c977e6efc84e512bb9c30f76e30c160ed06fbf863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa000000000000000000000000093d300e23c395c7362211d6a77e799b7e831aa19a00000000000000000000000007432eb844c9e9b886a10ca123f44c60070658596a000000000000000000000000000000000000000000000000006f05b59d3b20000f901ba947432eb844c9e9b886a10ca123f44c60070658596e1a08c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036b901800000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000014087a7811f4bfedea3d341ad165680ae306b01aaeacc205d227629cf157dd9f821000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000326c977e6efc84e512bb9c30f76e30c160ed06fb00000000000000000000000093d300e23c395c7362211d6a77e799b7e831aa1900000000000000000000000093d300e23c395c7362211d6a77e799b7e831aa1900000000000000000000000000000000000000000000000006f05b59d3b2000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000f9013d940000000000000000000000000000000000001010f884a04dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63a00000000000000000000000000000000000000000000000000000000000001010a000000000000000000000000093d300e23c395c7362211d6a77e799b7e831aa19a0000000000000000000000000e4b8e9222704401ad16d4d826732953daf07c7e2b8a00000000000000000000000000000000000000000000000000007716fd70964000000000000000000000000000000000000000000000000000c9bbda38db42800000000000000000000000000000000000000000000000000011591614d1245700000000000000000000000000000000000000000000000000c944c33b6aac400000000000000000000000000000000000000000000000000011d02d1241ba970b904b4f904b1f904ae822080b904a8f904a501830110cbbf9039af89b94326c977e6efc84e512bb9c30f76e30c160ed06fbf863a0ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa000000000000000000000000093d300e23c395c7362211d6a77e799b7e831aa19a00000000000000000000000007432eb844c9e9b886a10ca123f44c60070658596a000000000000000000000000000000000000000000000000006f05b59d3b20000f901ba947432eb844c9e9b886a10ca123f44c60070658596e1a08c5261668696ce22758910d05bab8f186d6eb247ceac2af2e82c7dc17669b036b901800000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000014087a7811f4bfedea3d341ad165680ae306b01aaeacc205d227629cf157dd9f821000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e0000000000000000000000000326c977e6efc84e512bb9c30f76e30c160ed06fb00000000000000000000000093d300e23c395c7362211d6a77e799b7e831aa1900000000000000000000000093d300e23c395c7362211d6a77e799b7e831aa1900000000000000000000000000000000000000000000000006f05b59d3b2000000000000000000000000000000000000000000000000000000000000000000a000000000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000000f9013d940000000000000000000000000000000000001010f884a04dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63a00000000000000000000000000000000000000000000000000000000000001010a000000000000000000000000093d300e23c395c7362211d6a77e799b7e831aa19a0000000000000000000000000e4b8e9222704401ad16d4d826732953daf07c7e2b8a00000000000000000000000000000000000000000000000000007716fd70964000000000000000000000000000000000000000000000000000c9bbda38db42800000000000000000000000000000000000000000000000000011591614d1245700000000000000000000000000000000000000000000000000c944c33b6aac400000000000000000000000000000000000000000000000000011d02d1241ba97082008001";

    const rootTunnel = new hre.ethers.Contract("0x2d12dA5cBB1E7Da90BBbFbDef15c0c3e14e0B56d", rootTunnelJson["abi"], deployer);
    const tx = await rootTunnel.receiveMessage(proof);
    console.log('tx hash:', tx);
  }
  
  main()
    .then(() => process.exit(0))
    .catch((error) => {
      console.error(error);
      process.exit(1);
    });